(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{1338:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CoinbaseWalletProvider=t.CoinbaseWalletSDK=void 0;const n=r(1062),o=r(725);var l=r(1062);Object.defineProperty(t,"CoinbaseWalletSDK",{enumerable:!0,get:function(){return l.CoinbaseWalletSDK}});var h=r(725);Object.defineProperty(t,"CoinbaseWalletProvider",{enumerable:!0,get:function(){return h.CoinbaseWalletProvider}}),t.default=n.CoinbaseWalletSDK,"undefined"!=typeof window&&(window.CoinbaseWalletSDK=n.CoinbaseWalletSDK,window.CoinbaseWalletProvider=o.CoinbaseWalletProvider,window.WalletLink=n.CoinbaseWalletSDK,window.WalletLinkProvider=o.CoinbaseWalletProvider)},2077:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ScopedLocalStorage=void 0;t.ScopedLocalStorage=class{constructor(e){this.scope=e}setItem(e,t){localStorage.setItem(this.scopedKey(e),t)}getItem(e){return localStorage.getItem(this.scopedKey(e))}removeItem(e){localStorage.removeItem(this.scopedKey(e))}clear(){const e=this.scopedKey(""),t=[];for(let i=0;i<localStorage.length;i++){const r=localStorage.key(i);"string"==typeof r&&r.startsWith(e)&&t.push(r)}t.forEach(e=>localStorage.removeItem(e))}scopedKey(e){return`${this.scope}:${e}`}}},2095:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.filterFromParam=t.FilterPolyfill=void 0;const n=r(732),o=r(315),l={jsonrpc:"2.0",id:0};function h(param){return{fromBlock:c(param.fromBlock),toBlock:c(param.toBlock),addresses:void 0===param.address?null:Array.isArray(param.address)?param.address:[param.address],topics:param.topics||[]}}function d(filter){const param={fromBlock:m(filter.fromBlock),toBlock:m(filter.toBlock),topics:filter.topics};return null!==filter.addresses&&(param.address=filter.addresses),param}function c(e){if(void 0===e||"latest"===e||"pending"===e)return"latest";if("earliest"===e)return(0,n.IntNumber)(0);if((0,o.isHexString)(e))return(0,o.intNumberFromHexString)(e);throw new Error("Invalid block option: "+String(e))}function m(e){return"latest"===e?e:(0,o.hexStringFromIntNumber)(e)}function _(){return Object.assign(Object.assign({},l),{error:{code:-32e3,message:"filter not found"}})}function y(){return Object.assign(Object.assign({},l),{result:[]})}t.FilterPolyfill=class{constructor(e){this.logFilters=new Map,this.blockFilters=new Set,this.pendingTransactionFilters=new Set,this.cursors=new Map,this.timeouts=new Map,this.nextFilterId=(0,n.IntNumber)(1),this.provider=e}async newFilter(param){const filter=h(param),e=this.makeFilterId(),cursor=await this.setInitialCursorPosition(e,filter.fromBlock);return console.log(`Installing new log filter(${e}):`,filter,"initial cursor position:",cursor),this.logFilters.set(e,filter),this.setFilterTimeout(e),(0,o.hexStringFromIntNumber)(e)}async newBlockFilter(){const e=this.makeFilterId(),cursor=await this.setInitialCursorPosition(e,"latest");return console.log(`Installing new block filter (${e}) with initial cursor position:`,cursor),this.blockFilters.add(e),this.setFilterTimeout(e),(0,o.hexStringFromIntNumber)(e)}async newPendingTransactionFilter(){const e=this.makeFilterId(),cursor=await this.setInitialCursorPosition(e,"latest");return console.log(`Installing new block filter (${e}) with initial cursor position:`,cursor),this.pendingTransactionFilters.add(e),this.setFilterTimeout(e),(0,o.hexStringFromIntNumber)(e)}uninstallFilter(e){const t=(0,o.intNumberFromHexString)(e);return console.log(`Uninstalling filter (${t})`),this.deleteFilter(t),!0}getFilterChanges(e){const t=(0,o.intNumberFromHexString)(e);return this.timeouts.has(t)&&this.setFilterTimeout(t),this.logFilters.has(t)?this.getLogFilterChanges(t):this.blockFilters.has(t)?this.getBlockFilterChanges(t):this.pendingTransactionFilters.has(t)?this.getPendingTransactionFilterChanges(t):Promise.resolve(_())}async getFilterLogs(e){const t=(0,o.intNumberFromHexString)(e),filter=this.logFilters.get(t);return filter?this.sendAsyncPromise(Object.assign(Object.assign({},l),{method:"eth_getLogs",params:[d(filter)]})):_()}makeFilterId(){return(0,n.IntNumber)(++this.nextFilterId)}sendAsyncPromise(e){return new Promise((t,r)=>{this.provider.sendAsync(e,(e,n)=>e?r(e):Array.isArray(n)||null==n?r(new Error("unexpected response received: "+JSON.stringify(n))):void t(n))})}deleteFilter(e){console.log(`Deleting filter (${e})`),this.logFilters.delete(e),this.blockFilters.delete(e),this.pendingTransactionFilters.delete(e),this.cursors.delete(e),this.timeouts.delete(e)}async getLogFilterChanges(e){const filter=this.logFilters.get(e),t=this.cursors.get(e);if(!t||!filter)return _();const r=await this.getCurrentBlockHeight(),h="latest"===filter.toBlock?r:filter.toBlock;if(t>r)return y();if(t>filter.toBlock)return y();console.log(`Fetching logs from ${t} to ${h} for filter ${e}`);const c=await this.sendAsyncPromise(Object.assign(Object.assign({},l),{method:"eth_getLogs",params:[d(Object.assign(Object.assign({},filter),{fromBlock:t,toBlock:h}))]}));if(Array.isArray(c.result)){const r=c.result.map(e=>(0,o.intNumberFromHexString)(e.blockNumber||"0x0")),l=Math.max(...r);if(l&&l>t){const r=(0,n.IntNumber)(l+1);console.log(`Moving cursor position for filter (${e}) from ${t} to ${r}`),this.cursors.set(e,r)}}return c}async getBlockFilterChanges(e){const t=this.cursors.get(e);if(!t)return _();const r=await this.getCurrentBlockHeight();if(t>r)return y();console.log(`Fetching blocks from ${t} to ${r} for filter (${e})`);const h=(await Promise.all((0,o.range)(t,r+1).map(i=>this.getBlockHashByNumber((0,n.IntNumber)(i))))).filter(e=>!!e),d=(0,n.IntNumber)(t+h.length);return console.log(`Moving cursor position for filter (${e}) from ${t} to ${d}`),this.cursors.set(e,d),Object.assign(Object.assign({},l),{result:h})}async getPendingTransactionFilterChanges(e){return Promise.resolve(y())}async setInitialCursorPosition(e,t){const r=await this.getCurrentBlockHeight(),n="number"==typeof t&&t>r?t:r;return this.cursors.set(e,n),n}setFilterTimeout(e){const t=this.timeouts.get(e);t&&window.clearTimeout(t);const r=window.setTimeout(()=>{console.log(`Filter (${e}) timed out`),this.deleteFilter(e)},3e5);this.timeouts.set(e,r)}async getCurrentBlockHeight(){const{result:e}=await this.sendAsyncPromise(Object.assign(Object.assign({},l),{method:"eth_blockNumber",params:[]}));return(0,o.intNumberFromHexString)((0,o.ensureHexString)(e))}async getBlockHashByNumber(e){const t=await this.sendAsyncPromise(Object.assign(Object.assign({},l),{method:"eth_getBlockByNumber",params:[(0,o.hexStringFromIntNumber)(e),!1]}));return t.result&&"string"==typeof t.result.hash?(0,o.ensureHexString)(t.result.hash):null}},t.filterFromParam=h},2096:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.JSONRPCMethod=void 0,function(e){e.eth_accounts="eth_accounts",e.eth_coinbase="eth_coinbase",e.net_version="net_version",e.eth_chainId="eth_chainId",e.eth_uninstallFilter="eth_uninstallFilter",e.eth_requestAccounts="eth_requestAccounts",e.eth_sign="eth_sign",e.eth_ecRecover="eth_ecRecover",e.personal_sign="personal_sign",e.personal_ecRecover="personal_ecRecover",e.eth_signTransaction="eth_signTransaction",e.eth_sendRawTransaction="eth_sendRawTransaction",e.eth_sendTransaction="eth_sendTransaction",e.eth_signTypedData_v1="eth_signTypedData_v1",e.eth_signTypedData_v2="eth_signTypedData_v2",e.eth_signTypedData_v3="eth_signTypedData_v3",e.eth_signTypedData_v4="eth_signTypedData_v4",e.eth_signTypedData="eth_signTypedData",e.cbWallet_arbitrary="walletlink_arbitrary",e.wallet_addEthereumChain="wallet_addEthereumChain",e.wallet_switchEthereumChain="wallet_switchEthereumChain",e.wallet_watchAsset="wallet_watchAsset",e.eth_subscribe="eth_subscribe",e.eth_unsubscribe="eth_unsubscribe",e.eth_newFilter="eth_newFilter",e.eth_newBlockFilter="eth_newBlockFilter",e.eth_newPendingTransactionFilter="eth_newPendingTransactionFilter",e.eth_getFilterChanges="eth_getFilterChanges",e.eth_getFilterLogs="eth_getFilterLogs"}(t.JSONRPCMethod||(t.JSONRPCMethod={}))},2097:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SubscriptionManager=void 0;const n=r(601),o=r(603),l=()=>{};t.SubscriptionManager=class{constructor(e){const t=new n({provider:e,pollingInterval:15e3,setSkipCacheFlag:!0}),{events:r,middleware:l}=o({blockTracker:t,provider:e});this.events=r,this.subscriptionMiddleware=l}async handleRequest(e){const t={};return await this.subscriptionMiddleware(e,t,l,l),t}destroy(){this.subscriptionMiddleware.destroy()}}},2098:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WalletSDKUI=void 0;const n=r(2099),o=r(2110),l=r(2112);t.WalletSDKUI=class{constructor(e){this.attached=!1,this.snackbar=new o.Snackbar({darkMode:e.darkMode}),this.linkFlow=new n.LinkFlow({darkMode:e.darkMode,version:e.version,sessionId:e.session.id,sessionSecret:e.session.secret,linkAPIUrl:e.linkAPIUrl,connected$:e.connected$,isParentConnection:!1})}attach(){if(this.attached)throw new Error("Coinbase Wallet SDK UI is already attached");const e=document.documentElement,t=document.createElement("div");t.className="-cbwsdk-css-reset",e.appendChild(t),this.linkFlow.attach(t),this.snackbar.attach(t),this.attached=!0,(0,l.injectCssReset)()}setConnectDisabled(e){this.linkFlow.setConnectDisabled(e)}addEthereumChain(e){}watchAsset(e){}switchEthereumChain(e){}requestEthereumAccounts(e){this.linkFlow.open({onCancel:e.onCancel})}hideRequestEthereumAccounts(){this.linkFlow.close()}signEthereumMessage(e){}signEthereumTransaction(e){}submitEthereumTransaction(e){}ethereumAddressFromSignedMessage(e){}showConnecting(e){let t;return t=e.isUnlinkedErrorState?{autoExpand:!0,message:"Connection lost",menuItems:[{isRed:!1,info:"Reset connection",svgWidth:"10",svgHeight:"11",path:"M5.00008 0.96875C6.73133 0.96875 8.23758 1.94375 9.00008 3.375L10.0001 2.375V5.5H9.53133H7.96883H6.87508L7.80633 4.56875C7.41258 3.3875 6.31258 2.53125 5.00008 2.53125C3.76258 2.53125 2.70633 3.2875 2.25633 4.36875L0.812576 3.76875C1.50008 2.125 3.11258 0.96875 5.00008 0.96875ZM2.19375 6.43125C2.5875 7.6125 3.6875 8.46875 5 8.46875C6.2375 8.46875 7.29375 7.7125 7.74375 6.63125L9.1875 7.23125C8.5 8.875 6.8875 10.0312 5 10.0312C3.26875 10.0312 1.7625 9.05625 1 7.625L0 8.625V5.5H0.46875H2.03125H3.125L2.19375 6.43125Z",defaultFillRule:"evenodd",defaultClipRule:"evenodd",onClick:e.onResetConnection}]}:{message:"Confirm on phone",menuItems:[{isRed:!0,info:"Cancel transaction",svgWidth:"11",svgHeight:"11",path:"M10.3711 1.52346L9.21775 0.370117L5.37109 4.21022L1.52444 0.370117L0.371094 1.52346L4.2112 5.37012L0.371094 9.21677L1.52444 10.3701L5.37109 6.53001L9.21775 10.3701L10.3711 9.21677L6.53099 5.37012L10.3711 1.52346Z",defaultFillRule:"inherit",defaultClipRule:"inherit",onClick:e.onCancel},{isRed:!1,info:"Reset connection",svgWidth:"10",svgHeight:"11",path:"M5.00008 0.96875C6.73133 0.96875 8.23758 1.94375 9.00008 3.375L10.0001 2.375V5.5H9.53133H7.96883H6.87508L7.80633 4.56875C7.41258 3.3875 6.31258 2.53125 5.00008 2.53125C3.76258 2.53125 2.70633 3.2875 2.25633 4.36875L0.812576 3.76875C1.50008 2.125 3.11258 0.96875 5.00008 0.96875ZM2.19375 6.43125C2.5875 7.6125 3.6875 8.46875 5 8.46875C6.2375 8.46875 7.29375 7.7125 7.74375 6.63125L9.1875 7.23125C8.5 8.875 6.8875 10.0312 5 10.0312C3.26875 10.0312 1.7625 9.05625 1 7.625L0 8.625V5.5H0.46875H2.03125H3.125L2.19375 6.43125Z",defaultFillRule:"evenodd",defaultClipRule:"evenodd",onClick:e.onResetConnection}]},this.snackbar.presentItem(t)}reloadUI(){document.location.reload()}inlineAccountsResponse(){return!1}inlineAddEthereumChain(e){return!1}inlineWatchAsset(){return!1}inlineSwitchEthereumChain(){return!1}isStandalone(){return!1}}},2112:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.injectCssReset=void 0;const o=n(r(2113));t.injectCssReset=function(){const e=document.createElement("style");e.type="text/css",e.appendChild(document.createTextNode(o.default)),document.documentElement.appendChild(e)}},2113:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default='@namespace svg "http://www.w3.org/2000/svg";.-cbwsdk-css-reset,.-cbwsdk-css-reset *{animation:none;animation-delay:0;animation-direction:normal;animation-duration:0;animation-fill-mode:none;animation-iteration-count:1;animation-name:none;animation-play-state:running;animation-timing-function:ease;backface-visibility:visible;background:0;background-attachment:scroll;background-clip:border-box;background-color:transparent;background-image:none;background-origin:padding-box;background-position:0 0;background-position-x:0;background-position-y:0;background-repeat:repeat;background-size:auto auto;border:0;border-style:none;border-width:medium;border-color:inherit;border-bottom:0;border-bottom-color:inherit;border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-style:none;border-bottom-width:medium;border-collapse:separate;border-image:none;border-left:0;border-left-color:inherit;border-left-style:none;border-left-width:medium;border-radius:0;border-right:0;border-right-color:inherit;border-right-style:none;border-right-width:medium;border-spacing:0;border-top:0;border-top-color:inherit;border-top-left-radius:0;border-top-right-radius:0;border-top-style:none;border-top-width:medium;bottom:auto;box-shadow:none;box-sizing:border-box;caption-side:top;clear:none;clip:auto;color:inherit;columns:auto;column-count:auto;column-fill:balance;column-gap:normal;column-rule:medium none currentColor;column-rule-color:currentColor;column-rule-style:none;column-rule-width:none;column-span:1;column-width:auto;content:normal;counter-increment:none;counter-reset:none;cursor:auto;direction:ltr;display:block;empty-cells:show;float:none;font:normal;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI","Helvetica Neue",Arial,sans-serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;height:auto;hyphens:none;left:auto;letter-spacing:normal;line-height:normal;list-style:none;list-style-image:none;list-style-position:outside;list-style-type:disc;margin:0;margin-bottom:0;margin-left:0;margin-right:0;margin-top:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;orphans:0;outline:0;outline-color:invert;outline-style:none;outline-width:medium;overflow:visible;overflow-x:visible;overflow-y:visible;padding:0;padding-bottom:0;padding-left:0;padding-right:0;padding-top:0;page-break-after:auto;page-break-before:auto;page-break-inside:auto;perspective:none;perspective-origin:50% 50%;pointer-events:auto;position:static;quotes:"\\201C" "\\201D" "\\2018" "\\2019";right:auto;tab-size:8;table-layout:auto;text-align:inherit;text-align-last:auto;text-decoration:none;text-decoration-color:inherit;text-decoration-line:none;text-decoration-style:solid;text-indent:0;text-shadow:none;text-transform:none;top:auto;transform:none;transform-style:flat;transition:none;transition-delay:0s;transition-duration:0s;transition-property:none;transition-timing-function:ease;unicode-bidi:normal;vertical-align:baseline;visibility:visible;white-space:normal;widows:0;width:auto;word-spacing:normal;z-index:auto}.-cbwsdk-css-reset *{box-sizing:border-box;display:initial;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI","Helvetica Neue",Arial,sans-serif;line-height:1}.-cbwsdk-css-reset [class*=container]{margin:0;padding:0}.-cbwsdk-css-reset style{display:none}'},725:function(e,t,r){"use strict";(function(e){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CoinbaseWalletProvider=void 0;const o=n(r(547)),l=n(r(548)),h=r(726),d=r(729),c=r(730),m=r(1160),_=r(315),y=n(r(2080)),f=r(2095),w=r(2096),v=r(2097);class C extends o.default{constructor(e){var t;super(),this._filterPolyfill=new f.FilterPolyfill(this),this._subscriptionManager=new v.SubscriptionManager(this),this._relay=null,this._addresses=[],this.hasMadeFirstChainChangedEmission=!1,this._send=this.send.bind(this),this._sendAsync=this.sendAsync.bind(this),this.setProviderInfo=this.setProviderInfo.bind(this),this.updateProviderInfo=this.updateProviderInfo.bind(this),this.getChainId=this.getChainId.bind(this),this.setAppInfo=this.setAppInfo.bind(this),this.enable=this.enable.bind(this),this.close=this.close.bind(this),this.send=this.send.bind(this),this.sendAsync=this.sendAsync.bind(this),this.request=this.request.bind(this),this._setAddresses=this._setAddresses.bind(this),this.scanQRCode=this.scanQRCode.bind(this),this.genericRequest=this.genericRequest.bind(this),this._jsonRpcUrlFromOpts=e.jsonRpcUrl,this._overrideIsMetaMask=e.overrideIsMetaMask,this._relayProvider=e.relayProvider,this._storage=e.storage,this._relayEventManager=e.relayEventManager,this._eventListener=e.eventListener,this.isCoinbaseWallet=null===(t=e.overrideIsCoinbaseWallet)||void 0===t||t;const r=this.getChainId(),n=(0,_.prepend0x)(r.toString(16));this.emit("connect",{chainIdStr:n});const o=this._storage.getItem(m.LOCAL_STORAGE_ADDRESSES_KEY);if(o){const e=o.split(" ");""!==e[0]&&(this._addresses=e.map(address=>(0,_.ensureAddressString)(address)),this.emit("accountsChanged",e))}this._subscriptionManager.events.on("notification",e=>{this.emit("message",{type:e.method,data:e.params})}),this._addresses.length>0&&this.initializeRelay(),window.addEventListener("message",e=>{var t;if("walletLinkMessage"===e.data.type&&"defaultChainChanged"===e.data.data.action){const r=e.data.data.chainId,n=null!==(t=e.data.data.jsonRpcUrl)&&void 0!==t?t:this.jsonRpcUrl;this.updateProviderInfo(n,Number(r),!0)}})}get selectedAddress(){return this._addresses[0]||void 0}get networkVersion(){return this.getChainId().toString(10)}get chainId(){return(0,_.prepend0x)(this.getChainId().toString(16))}get isWalletLink(){return!0}get isMetaMask(){return this._overrideIsMetaMask}get host(){return this.jsonRpcUrl}get connected(){return!0}isConnected(){return!0}get jsonRpcUrl(){var e;return null!==(e=this._storage.getItem("DefaultJsonRpcUrl"))&&void 0!==e?e:this._jsonRpcUrlFromOpts}set jsonRpcUrl(e){this._storage.setItem("DefaultJsonRpcUrl",e)}get isChainOverridden(){return"true"===this._storage.getItem("HasChainOverriddenFromRelay")}set isChainOverridden(e){this._storage.setItem("HasChainOverriddenFromRelay",e.toString())}setProviderInfo(e,t){this.isChainOverridden||this.updateProviderInfo(e,this.getChainId(),!1)}updateProviderInfo(e,t,r){if("true"===this._storage.getItem("HasChainBeenSwitched")&&r)return;r&&(this.isChainOverridden=!0),this.jsonRpcUrl=e;const n=this.getChainId();this._storage.setItem("DefaultChainId",t.toString(10));!((0,_.ensureIntNumber)(t)!==n)&&this.hasMadeFirstChainChangedEmission||(this.emit("chainChanged",this.getChainId()),this.hasMadeFirstChainChangedEmission=!0)}async watchAsset(e,address,symbol,t,image){const r=await this.initializeRelay();return!!(await r.watchAsset(e,address,symbol,t,image).promise).result}async addEthereumChain(e,t,r,n,o,l){var h,d;if((0,_.ensureIntNumber)(e)===this.getChainId())return!1;const c=await this.initializeRelay(),m=c.inlineAddEthereumChain(e.toString());this._isAuthorized()||m||await c.requestEthereumAccounts().promise;const y=await c.addEthereumChain(e.toString(),t,o,r,n,l).promise;return!0===(null===(h=y.result)||void 0===h?void 0:h.isApproved)&&(this._storage.setItem("HasChainBeenSwitched","true"),this.updateProviderInfo(t[0],e,!1)),!0===(null===(d=y.result)||void 0===d?void 0:d.isApproved)}async switchEthereumChain(e){if((0,_.ensureIntNumber)(e)===this.getChainId())return;const t=await this.initializeRelay(),r=await t.switchEthereumChain(e.toString(10)).promise;if(r.errorCode)throw h.ethErrors.provider.custom({code:r.errorCode});const n=r.result;n.isApproved&&n.rpcUrl.length>0&&(this._storage.setItem("HasChainBeenSwitched","true"),this.updateProviderInfo(n.rpcUrl,e,!1))}setAppInfo(e,t){this.initializeRelay().then(r=>r.setAppInfo(e,t))}async enable(){var e;return null===(e=this._eventListener)||void 0===e||e.onEvent(d.EVENTS.ETH_ACCOUNTS_STATE,{method:"provider::enable",addresses_length:this._addresses.length,sessionIdHash:this._relay?c.Session.hash(this._relay.session.id):null}),this._addresses.length>0?[...this._addresses]:await this._send(w.JSONRPCMethod.eth_requestAccounts)}close(){this.initializeRelay().then(e=>e.resetAndReload())}send(e,t){if("string"==typeof e){const r={jsonrpc:"2.0",id:0,method:e,params:Array.isArray(t)?t:void 0!==t?[t]:[]};return this._sendRequestAsync(r).then(e=>e.result)}if("function"==typeof t){const r=e,n=t;return this._sendAsync(r,n)}if(Array.isArray(e)){return e.map(e=>this._sendRequest(e))}const r=e;return this._sendRequest(r)}sendAsync(e,t){if("function"!=typeof t)throw new Error("callback is required");if(Array.isArray(e)){const r=t;return void this._sendMultipleRequestsAsync(e).then(e=>r(null,e)).catch(e=>r(e,null))}const r=t;this._sendRequestAsync(e).then(e=>r(null,e)).catch(e=>r(e,null))}async request(e){if(!e||"object"!=typeof e||Array.isArray(e))throw h.ethErrors.rpc.invalidRequest({message:"Expected a single, non-array, object argument.",data:e});const{method:t,params:r}=e;if("string"!=typeof t||0===t.length)throw h.ethErrors.rpc.invalidRequest({message:"'args.method' must be a non-empty string.",data:e});if(void 0!==r&&!Array.isArray(r)&&("object"!=typeof r||null===r))throw h.ethErrors.rpc.invalidRequest({message:"'args.params' must be an object or array if provided.",data:e});const n=void 0===r?[]:r,o=this._relayEventManager.makeRequestId();return(await this._sendRequestAsync({method:t,params:n,jsonrpc:"2.0",id:o})).result}async scanQRCode(e){const t=await this.initializeRelay(),r=await t.scanQRCode((0,_.ensureRegExpString)(e)).promise;if("string"!=typeof r.result)throw new Error("result was not a string");return r.result}async genericRequest(data,e){const t=await this.initializeRelay(),r=await t.genericRequest(data,e).promise;if("string"!=typeof r.result)throw new Error("result was not a string");return r.result}supportsSubscriptions(){return!1}subscribe(){throw new Error("Subscriptions are not supported")}unsubscribe(){throw new Error("Subscriptions are not supported")}disconnect(){return!0}_sendRequest(e){const t={jsonrpc:"2.0",id:e.id},{method:r}=e;if(t.result=this._handleSynchronousMethods(e),void 0===t.result)throw new Error(`Coinbase Wallet does not support calling ${r} synchronously without a callback. Please provide a callback parameter to call ${r} asynchronously.`);return t}_setAddresses(e){if(!Array.isArray(e))throw new Error("addresses is not an array");const t=e.map(address=>(0,_.ensureAddressString)(address));JSON.stringify(t)!==JSON.stringify(this._addresses)&&(this._addresses=t,this.emit("accountsChanged",this._addresses),this._storage.setItem(m.LOCAL_STORAGE_ADDRESSES_KEY,t.join(" ")))}_sendRequestAsync(e){return new Promise((t,r)=>{try{const n=this._handleSynchronousMethods(e);if(void 0!==n)return t({jsonrpc:"2.0",id:e.id,result:n});const o=this._handleAsynchronousFilterMethods(e);if(void 0!==o)return void o.then(r=>t(Object.assign(Object.assign({},r),{id:e.id}))).catch(e=>r(e));const l=this._handleSubscriptionMethods(e);if(void 0!==l)return void l.then(r=>t({jsonrpc:"2.0",id:e.id,result:r.result})).catch(e=>r(e))}catch(e){return r(e)}this._handleAsynchronousMethods(e).then(r=>r&&t(Object.assign(Object.assign({},r),{id:e.id}))).catch(e=>r(e))})}_sendMultipleRequestsAsync(e){return Promise.all(e.map(e=>this._sendRequestAsync(e)))}_handleSynchronousMethods(e){const{method:t}=e,r=e.params||[];switch(t){case w.JSONRPCMethod.eth_accounts:return this._eth_accounts();case w.JSONRPCMethod.eth_coinbase:return this._eth_coinbase();case w.JSONRPCMethod.eth_uninstallFilter:return this._eth_uninstallFilter(r);case w.JSONRPCMethod.net_version:return this._net_version();case w.JSONRPCMethod.eth_chainId:return this._eth_chainId();default:return}}async _handleAsynchronousMethods(e){const{method:t}=e,r=e.params||[];switch(t){case w.JSONRPCMethod.eth_requestAccounts:return this._eth_requestAccounts();case w.JSONRPCMethod.eth_sign:return this._eth_sign(r);case w.JSONRPCMethod.eth_ecRecover:return this._eth_ecRecover(r);case w.JSONRPCMethod.personal_sign:return this._personal_sign(r);case w.JSONRPCMethod.personal_ecRecover:return this._personal_ecRecover(r);case w.JSONRPCMethod.eth_signTransaction:return this._eth_signTransaction(r);case w.JSONRPCMethod.eth_sendRawTransaction:return this._eth_sendRawTransaction(r);case w.JSONRPCMethod.eth_sendTransaction:return this._eth_sendTransaction(r);case w.JSONRPCMethod.eth_signTypedData_v1:return this._eth_signTypedData_v1(r);case w.JSONRPCMethod.eth_signTypedData_v2:return this._throwUnsupportedMethodError();case w.JSONRPCMethod.eth_signTypedData_v3:return this._eth_signTypedData_v3(r);case w.JSONRPCMethod.eth_signTypedData_v4:case w.JSONRPCMethod.eth_signTypedData:return this._eth_signTypedData_v4(r);case w.JSONRPCMethod.cbWallet_arbitrary:return this._cbwallet_arbitrary(r);case w.JSONRPCMethod.wallet_addEthereumChain:return this._wallet_addEthereumChain(r);case w.JSONRPCMethod.wallet_switchEthereumChain:return this._wallet_switchEthereumChain(r);case w.JSONRPCMethod.wallet_watchAsset:return this._wallet_watchAsset(r)}return(await this.initializeRelay()).makeEthereumJSONRPCRequest(e,this.jsonRpcUrl)}_handleAsynchronousFilterMethods(e){const{method:t}=e,r=e.params||[];switch(t){case w.JSONRPCMethod.eth_newFilter:return this._eth_newFilter(r);case w.JSONRPCMethod.eth_newBlockFilter:return this._eth_newBlockFilter();case w.JSONRPCMethod.eth_newPendingTransactionFilter:return this._eth_newPendingTransactionFilter();case w.JSONRPCMethod.eth_getFilterChanges:return this._eth_getFilterChanges(r);case w.JSONRPCMethod.eth_getFilterLogs:return this._eth_getFilterLogs(r)}}_handleSubscriptionMethods(e){switch(e.method){case w.JSONRPCMethod.eth_subscribe:case w.JSONRPCMethod.eth_unsubscribe:return this._subscriptionManager.handleRequest(e)}}_isKnownAddress(e){try{const address=(0,_.ensureAddressString)(e);return this._addresses.map(address=>(0,_.ensureAddressString)(address)).includes(address)}catch(e){}return!1}_ensureKnownAddress(e){var t;if(!this._isKnownAddress(e))throw null===(t=this._eventListener)||void 0===t||t.onEvent(d.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED),new Error("Unknown Ethereum address")}_prepareTransactionParams(t){const r=t.from?(0,_.ensureAddressString)(t.from):this.selectedAddress;if(!r)throw new Error("Ethereum address is unavailable");this._ensureKnownAddress(r);return{fromAddress:r,toAddress:t.to?(0,_.ensureAddressString)(t.to):null,weiValue:null!=t.value?(0,_.ensureBN)(t.value):new l.default(0),data:t.data?(0,_.ensureBuffer)(t.data):e.alloc(0),nonce:null!=t.nonce?(0,_.ensureIntNumber)(t.nonce):null,gasPriceInWei:null!=t.gasPrice?(0,_.ensureBN)(t.gasPrice):null,maxFeePerGas:null!=t.maxFeePerGas?(0,_.ensureBN)(t.maxFeePerGas):null,maxPriorityFeePerGas:null!=t.maxPriorityFeePerGas?(0,_.ensureBN)(t.maxPriorityFeePerGas):null,gasLimit:null!=t.gas?(0,_.ensureBN)(t.gas):null,chainId:this.getChainId()}}_isAuthorized(){return this._addresses.length>0}_requireAuthorization(){if(!this._isAuthorized())throw h.ethErrors.provider.unauthorized({})}_throwUnsupportedMethodError(){throw h.ethErrors.provider.unsupportedMethod({})}async _signEthereumMessage(e,address,t,r){this._ensureKnownAddress(address);try{const n=await this.initializeRelay();return{jsonrpc:"2.0",id:0,result:(await n.signEthereumMessage(e,address,t,r).promise).result}}catch(e){if("string"==typeof e.message&&e.message.match(/(denied|rejected)/i))throw h.ethErrors.provider.userRejectedRequest("User denied message signature");throw e}}async _ethereumAddressFromSignedMessage(e,t,r){const n=await this.initializeRelay();return{jsonrpc:"2.0",id:0,result:(await n.ethereumAddressFromSignedMessage(e,t,r).promise).result}}_eth_accounts(){return[...this._addresses]}_eth_coinbase(){return this.selectedAddress||null}_net_version(){return this.getChainId().toString(10)}_eth_chainId(){return(0,_.hexStringFromIntNumber)(this.getChainId())}getChainId(){const e=this._storage.getItem("DefaultChainId")||"1",t=parseInt(e,10);return(0,_.ensureIntNumber)(t)}async _eth_requestAccounts(){var e;if(null===(e=this._eventListener)||void 0===e||e.onEvent(d.EVENTS.ETH_ACCOUNTS_STATE,{method:"provider::_eth_requestAccounts",addresses_length:this._addresses.length,sessionIdHash:this._relay?c.Session.hash(this._relay.session.id):null}),this._addresses.length>0)return Promise.resolve({jsonrpc:"2.0",id:0,result:this._addresses});let t;try{const e=await this.initializeRelay();t=await e.requestEthereumAccounts().promise}catch(e){if("string"==typeof e.message&&e.message.match(/(denied|rejected)/i))throw h.ethErrors.provider.userRejectedRequest("User denied account authorization");throw e}if(!t.result)throw new Error("accounts received is empty");return this._setAddresses(t.result),{jsonrpc:"2.0",id:0,result:this._addresses}}_eth_sign(e){this._requireAuthorization();const address=(0,_.ensureAddressString)(e[0]),t=(0,_.ensureBuffer)(e[1]);return this._signEthereumMessage(t,address,!1)}_eth_ecRecover(e){const t=(0,_.ensureBuffer)(e[0]),r=(0,_.ensureBuffer)(e[1]);return this._ethereumAddressFromSignedMessage(t,r,!1)}_personal_sign(e){this._requireAuthorization();const t=(0,_.ensureBuffer)(e[0]),address=(0,_.ensureAddressString)(e[1]);return this._signEthereumMessage(t,address,!0)}_personal_ecRecover(e){const t=(0,_.ensureBuffer)(e[0]),r=(0,_.ensureBuffer)(e[1]);return this._ethereumAddressFromSignedMessage(t,r,!0)}async _eth_signTransaction(e){this._requireAuthorization();const t=this._prepareTransactionParams(e[0]||{});try{const e=await this.initializeRelay();return{jsonrpc:"2.0",id:0,result:(await e.signEthereumTransaction(t).promise).result}}catch(e){if("string"==typeof e.message&&e.message.match(/(denied|rejected)/i))throw h.ethErrors.provider.userRejectedRequest("User denied transaction signature");throw e}}async _eth_sendRawTransaction(e){const t=(0,_.ensureBuffer)(e[0]),r=await this.initializeRelay();return{jsonrpc:"2.0",id:0,result:(await r.submitEthereumTransaction(t,this.getChainId()).promise).result}}async _eth_sendTransaction(e){this._requireAuthorization();const t=this._prepareTransactionParams(e[0]||{});try{const e=await this.initializeRelay();return{jsonrpc:"2.0",id:0,result:(await e.signAndSubmitEthereumTransaction(t).promise).result}}catch(e){if("string"==typeof e.message&&e.message.match(/(denied|rejected)/i))throw h.ethErrors.provider.userRejectedRequest("User denied transaction signature");throw e}}async _eth_signTypedData_v1(e){this._requireAuthorization();const t=(0,_.ensureParsedJSONObject)(e[0]),address=(0,_.ensureAddressString)(e[1]);this._ensureKnownAddress(address);const r=y.default.hashForSignTypedDataLegacy({data:t}),n=JSON.stringify(t,null,2);return this._signEthereumMessage(r,address,!1,n)}async _eth_signTypedData_v3(e){this._requireAuthorization();const address=(0,_.ensureAddressString)(e[0]),t=(0,_.ensureParsedJSONObject)(e[1]);this._ensureKnownAddress(address);const r=y.default.hashForSignTypedData_v3({data:t}),n=JSON.stringify(t,null,2);return this._signEthereumMessage(r,address,!1,n)}async _eth_signTypedData_v4(e){this._requireAuthorization();const address=(0,_.ensureAddressString)(e[0]),t=(0,_.ensureParsedJSONObject)(e[1]);this._ensureKnownAddress(address);const r=y.default.hashForSignTypedData_v4({data:t}),n=JSON.stringify(t,null,2);return this._signEthereumMessage(r,address,!1,n)}async _cbwallet_arbitrary(e){const t=e[0],data=e[1];if("string"!=typeof data)throw new Error("parameter must be a string");if("object"!=typeof t||null===t)throw new Error("parameter must be an object");return{jsonrpc:"2.0",id:0,result:await this.genericRequest(t,data)}}async _wallet_addEthereumChain(e){var t,r,n,o;const l=e[0];if(0===(null===(t=l.rpcUrls)||void 0===t?void 0:t.length))return{jsonrpc:"2.0",id:0,error:{code:2,message:"please pass in at least 1 rpcUrl"}};if(!l.chainName||""===l.chainName.trim())throw h.ethErrors.provider.custom({code:0,message:"chainName is a required field"});if(!l.nativeCurrency)throw h.ethErrors.provider.custom({code:0,message:"nativeCurrency is a required field"});const d=parseInt(l.chainId,16);return await this.addEthereumChain(d,null!==(r=l.rpcUrls)&&void 0!==r?r:[],null!==(n=l.blockExplorerUrls)&&void 0!==n?n:[],l.chainName,null!==(o=l.iconUrls)&&void 0!==o?o:[],l.nativeCurrency)?{jsonrpc:"2.0",id:0,result:null}:{jsonrpc:"2.0",id:0,error:{code:2,message:"unable to add ethereum chain"}}}async _wallet_switchEthereumChain(e){const t=e[0];return await this.switchEthereumChain(parseInt(t.chainId,16)),{jsonrpc:"2.0",id:0,result:null}}async _wallet_watchAsset(e){var t;const r=Array.isArray(e)?e[0]:e;if(0===(null===(t=r.type)||void 0===t?void 0:t.length))throw h.ethErrors.rpc.invalidParams({message:"type is a required field"});if("ERC20"!==r.type)throw h.ethErrors.rpc.invalidParams({message:`Asset of type '${r.type}' not supported`});if(!(null==r?void 0:r.options))throw h.ethErrors.rpc.invalidParams({message:"options is a required field"});if(!r.options.address)throw h.ethErrors.rpc.invalidParams({message:"option address is a required option"});const{address:address,symbol:symbol,image:image,decimals:n}=r.options;return{jsonrpc:"2.0",id:0,result:await this.watchAsset(r.type,address,symbol,n,image)}}_eth_uninstallFilter(e){const t=(0,_.ensureHexString)(e[0]);return this._filterPolyfill.uninstallFilter(t)}async _eth_newFilter(e){const param=e[0];return{jsonrpc:"2.0",id:0,result:await this._filterPolyfill.newFilter(param)}}async _eth_newBlockFilter(){return{jsonrpc:"2.0",id:0,result:await this._filterPolyfill.newBlockFilter()}}async _eth_newPendingTransactionFilter(){return{jsonrpc:"2.0",id:0,result:await this._filterPolyfill.newPendingTransactionFilter()}}_eth_getFilterChanges(e){const t=(0,_.ensureHexString)(e[0]);return this._filterPolyfill.getFilterChanges(t)}_eth_getFilterLogs(e){const t=(0,_.ensureHexString)(e[0]);return this._filterPolyfill.getFilterLogs(t)}initializeRelay(){return this._relay?Promise.resolve(this._relay):this._relayProvider().then(e=>(e.setAccountsCallback(e=>this._setAddresses(e)),e.setChainCallback((e,t)=>{this.updateProviderInfo(t,parseInt(e,10),!0)}),this._relay=e,e))}}t.CoinbaseWalletProvider=C}).call(this,r(6).Buffer)}}]);